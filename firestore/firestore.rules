rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
     match /players/{playerId} {
      allow read, write: if isAuth(request.auth.uid);
    }
    
    match /games/{gameId}{
      allow read: if partOfTheGame();
     	allow update: if partOfTheGame() || isValidJoinRequest();
     	allow create: if hasAuth();
      allow delete: if isAuth(dbData().player1.id);
    }
  }
  
  // Helpers
  function hasAuth(){
  	return request.auth != null;
  }
  function isAuth(id){
  	return hasAuth() && request.auth.uid == id;
  }
  function reqData(){
  	return request.resource.data;
  }
  function dbData(){
  	return resource.data;
  }
  
  function partOfTheGame(){
    return isAuth(dbData().player1.id) ||
     		isAuth(dbData().player2.id)
  }
  
  function isValidJoinRequest() {
    return hasAuth()
      && !("player2" in dbData()) // Player is not already part of the game
      && isAuth(reqData().player2.id);
  }
}